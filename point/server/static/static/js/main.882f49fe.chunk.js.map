{"version":3,"sources":["payments/PayPalExpressButton.js","Manifesto.js","GettingStarted.js","clients/RepoClient.js","Repos.js","About.js","Navigation.js","layout/Footer.js","App.js","index.js"],"names":["PaypalButton","isScriptLoaded","isScriptLoadSucceed","this","props","window","paypal","Buttons","style","shape","color","layout","label","createOrder","data","actions","order","create","purchase_units","amount","value","application_context","shipping_preference","onApprove","capture","then","details","alert","payer","name","given_name","render","onError","id","React","Component","scriptLoader","Manifesto","host","domain","imageUrl","paypalId","Typography","align","paragraph","href","className","src","alt","GettingStarted","RepoClient","fetch","result","json","RepoForm","setState","handleSubmit","bind","event","preventDefault","FormData","document","forms","method","body","catch","TextField","Button","variant","onClick","Repos","state","repos","getRepos","onDelete","toggleVisible","target","type","repoName","confirm","length","map","index","key","token","About","TabPanel","children","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","TabNav","username","classes","useState","setValue","tabs","Tab","tabPanels","undefined","loggedIn","push","AppBar","position","Tabs","onChange","newValue","aria-label","Footer","App","access-token","project-id","ReactDOM","HOST","DOMAIN","PAYPALID","getElementById"],"mappings":"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","file":"static/js/main.882f49fe.chunk.js","sourcesContent":["import React from 'react';\nimport scriptLoader from 'react-async-script-loader';\n\nclass PaypalButton extends React.Component {\n   componentWillReceiveProps ({ isScriptLoaded, isScriptLoadSucceed }) {\n    if (isScriptLoaded && !this.props.isScriptLoaded) {\n      if (isScriptLoadSucceed) {\n        window.paypal.Buttons({\n          style: {\n              shape: 'rect',\n              color: 'blue',\n              layout: 'horizontal',\n              label: 'paypal',\n\n          },\n          createOrder: function(data, actions) {\n              return actions.order.create({\n                  purchase_units: [{\n                      amount: {\n                          value: '5'\n                      }\n                  }],\n                  application_context: {\n                      shipping_preference: \"NO_SHIPPING\"\n                  }\n              });\n          },\n          onApprove: function(data, actions) {\n              return actions.order.capture().then(function(details) {\n                  alert('Thank you for your support, ' + details.payer.name.given_name + '!');\n              });\n          }\n        }).render('#paypal-button-container');\n      }\n      else this.props.onError()\n    }\n  }\n\n  render() {\n    return <div id=\"paypal-button-container\"></div>\n  }\n}\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport PayPalExpressButton from './payments/PayPalExpressButton'\n\n\nfunction Manifesto({host, domain, paypalId}) {\n    const imageUrl = `https://${domain}/trevorgrayson/pointillism/master/example.dot.svg`\n    return (\n        <Typography align=\"left\" paragraph={true}>\n            <p>\n            Graphs (aka diagrams) convey a lot of information quickly. Making them and keeping them up-to-date\n            with a coding project is a different story.\n            </p>\n\n            <p>\n            <code>`pointillism.io`</code> is not just an <a href=\"https://github.com/trevorgrayson/pointillism\">open source project</a>,\n             or a service.  It's a different way to express yourself.\n            </p>\n\n            <ul>\n              <li>GitHub <code>README</code>s become instantly understandable with diagrams.</li>\n              <li>Wikis stay up to date when they point to <code>pointillism's</code> checked-in links.</li>\n            </ul>\n\n            <p>\n            When you have your diagrams checked into github <b>with the project</b>, you can defend your documentation\n            from getting out of date during Pull Reviews.\n            </p>\n\n            <h2>Getting Started</h2>\n            <p>\n              Check in <a href=\"https://en.wikipedia.org/wiki/DOT_(graph_description_language)\">dot graph files</a>&nbsp;\n              to github and start using pointillism urls in your documentation.&nbsp;\n              <code>pointillism.io</code> image urls reflect github's <code>raw</code> content urls, so it's easy&nbsp;\n              getting started.\n            </p>\n            <p>\n              If you have a github file such as <code>https://{host}/trevorgrayson/pointillism/master/example.dot</code>,&nbsp;\n              just replace <code>{host}</code> with <code>{domain}</code>, and append your desired format&nbsp;\n              (<code>.svg</code>, <code>.png</code>, <code>.jpg</code>).\n            </p>\n\n            <div className=\"example\">\n              <p>\n                <code>&lt;img src=\"{imageUrl}\"/&gt;</code>\n              </p>\n              <center>\n                <img src={imageUrl} alt=\"example graph\" />\n              </center>\n            </div>\n\n            <h2>As a Service</h2>\n            <p>\n              If you want to help keep this economy going during these COVID-19 times,\n              please consider paying a small fee for the hosting services. <b>Early adopters will be favored.</b>\n            </p>\n            <p>\n              <code>pointillism</code> is and always will be <a href=\"https://github.com/trevorgrayson/pointillism\">open source</a>.\n            </p>\n          \n        </Typography>\n    )\n    // <PayPalExpressButton/>\n}\n\nexport default Manifesto;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n// function rawUrl(host, org, username, path) {\n//     return \"https://{host}/{org}/{username}/raw/{path}\"\n// }\n\nfunction GettingStarted({host, domain, paypalId}) {\n    const ptImage = 'https://pointillism.io/trevorgrayson/pointillism/master/pointillism.dot.svg';\n\n    return (\n        <Typography align=\"left\" paragraph={true}>\n            <h1>Github.com</h1>\n            <p>\n            All dot files hosted in <a href=\"https://github.com\">github.com</a> repositories are supported.\n            </p>\n\n            <h2>rendering images in <code>README.md</code> and Wikis.</h2>\n            <p>Find your <code>pointillism.io</code> link (as described in the previous section) and add a markdown\n            image tag as described in <a href=\"https://guides.github.com/features/mastering-markdown/\">Github's Mastering Markdown</a>.\n            </p>\n            <p>\n                <code>![pointillism.io](https://pointillism.io/trevorgrayson/pointillism/master/pointillism.dot.svg)</code>\n            </p>\n\n            <h2>rendering using &lt;img/&gt; tags</h2>\n\n            <p>\n                <code>&lt;img src=\"https://pointillism.io/trevorgrayson/pointillism/master/pointillism.dot.svg\" /&gt;</code>\n            </p>\n\n            <h2>getting your pointillism url</h2>\n            <p>The pointillism url is defined as:</p>\n            <p>\n                <code>https://pointillism.io/$GitHubOwner/$GitHubRepository/$Branch/$FilePath</code>\n            </p>\n            <p>\n            This is most easily found by changing the domain on the \"raw\" URL of the github file you'll be rendering.\n            <p>\n            </p>\n                <code>\n                   https://raw.githubusercontent.com/trevorgrayson/pointillism/master/pointillism.dot\n                </code>\n            </p>\n            <p>becomes...</p>\n            <p>\n                <code>\n                    https://pointillism.io/trevorgrayson/pointillism/master/pointillism.dot.svg\n                </code>\n            </p>\n            <center>\n                <img src=\"https://pointillism.io/trevorgrayson/pointillism/master/pointillism.dot.svg\" alt=\"pointillism architecture\" />\n            </center>\n            <h3>step by step</h3>\n            <ol className=\"steps\">\n                <li>Click to <a href=\"/github/login\">Login</a>.</li>\n                <li>\n                    In GitHub, navigate to the repository, and to the <code>.dot</code> graph file you would like to render.<br/>\n                    For example: <a href=\"https://github.com/trevorgrayson/pointillism/blob/master/pointillism.dot\">example.dot</a></li>\n                <li>Click on the \"Raw\" button located to the top right, close to the edit buttons.</li>\n                <li>You'll be forwarded to a new URL, which you will modify to render your image.</li>\n                <li>Change the domain on this URL to <code>pointillism.io</code>.</li>\n                <li>\n                    Append an image file type to the full url.  Supported formats include:\n                    <code>.svg</code>, <code>.png</code>, <code>.jpg</code>\n                </li>\n            </ol>\n            \n            <p>If your Repository is public, you should be all set!</p>\n\n            <h3>authorization</h3>\n            <p>To render files from a private repo, you must give pointillism.io access to the file.  This\n            can be done by generating a Repository Token, or by using github's temporary <code>raw</code> tokens.\n            </p>\n\n            <h3>Generate Repository Token</h3>\n            <p>\n                This is the preferred method for rendering privileged diagrams.\n            </p>\n            <ol>\n                <li>Navigate to the \"Your Repositories.\"</li>\n                <li>Fill in the <code>owner/repository</code> for the project from which you wish to render diagrams.<br/> \n                    For this project it would be <a href=\"https://github.com/trevorgrayson/pointillism\">trevorgrayson/pointillism</a>.\n                </li>\n                <li>Click Authorize.</li>\n                <li>Refresh the page and return to the \"Your Repositories\" tab (Sorry.)</li>\n                <li>Click on the password field next to your repository to get your access token.</li>\n                <li>This access token should be provided in the query parameters of your requests.<br/>\n                    <code>?token=YOUR_TOKEN</code>\n                </li>\n\n            </ol>\n\n            <h3>Raw Token</h3>\n            <p>This method may be less preferred because <strong>github's user content tokens are temporary</strong>\n            (they seem to last 7 days.)\n            </p>\n\n            <ol className=\"steps\">\n                <li>Ensure you're logged into your <a href=\"https://github.com/login\">github account</a>.</li>\n                <li>\n                    In GitHub, navigate to the repository, and to the <code>.dot</code> graph file you would like to render.<br/>\n                    For example: <a href=\"https://github.com/trevorgrayson/pointillism/blob/master/pointillism.dot\">example.dot</a></li>\n                <li>Click on the \"Raw\" button located to the top right, close to the edit buttons.</li>\n                <li>You'll be forwarded to a new URL, which you will modify to render your image.</li>\n                <li>\n                    <b>!!!</b>&nbsp;\n                    If you repository is private, this link will have a token. Be sure to include this token.&nbsp;\n                    <b>!!!</b>\n                </li>\n                <li>Change the domain on this URL to <code>pointillism.io</code>.</li>\n                <li>\n                    Append an image file type to the full url.  Supported formats include:\n                    <code>.svg</code>, <code>.png</code>, <code>.jpg</code>\n                </li>\n            </ol>\n        </Typography>\n    )\n}\n\nexport default GettingStarted;","class RepoClient {\n    static getRepos() { return fetch('/v1/repos').then(result => result.json()) }\n}\n\nexport default RepoClient;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport RepoClient from './clients/RepoClient';\n\nclass RepoForm extends React.Component {\n  constructor(props) {\n   super(props);\n   this.setState(props)\n   this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(document.forms[0]);\n\n    fetch('/v1/repos', {\n        method: \"POST\",\n        body: data\n    }).then((result) => {\n        // TODO 404\n        alert(\"OK\")\n    }).catch((result) => {\n        alert(\"FAILED! \" + result)\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"repo\">\n        <h2>Authorize New Repo</h2>\n        <TextField name=\"repo\" label=\"Authorize Repository\" />\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>Authorize</Button>\n      </form>\n    )\n  }\n}\n\nclass Repos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        repos: []\n    };\n    RepoClient.getRepos()\n              .then( (result) => {\n        this.setState({repos: result})\n    });\n\n    this.onDelete = this.onDelete.bind(this)\n    this.toggleVisible = this.toggleVisible.bind(this)\n  }\n\n  toggleVisible(event) {\n    if(event.target.type === \"text\") {\n      event.target.type = \"password\"\n    } else {\n      event.target.type = \"text\"\n    }\n  }\n\n  onDelete(event) {\n    const repoName = event //hack\n    const response = window.confirm(\"Deleting '\"+repoName+\"'. Are you sure?\")\n\n    if (response) {\n      fetch('/v1/repos/' + repoName, {\n        method: \"DELETE\"\n      }).then((result) => {\n        alert(\"OK\")\n      }).catch((result) => {\n        alert(\"failed\")\n      })\n    }\n  }\n\n  render() {\n    const {repos} = this.state;\n\n    return (\n    <div>\n      <RepoForm/>\n      <h2>Authorized Repos ({repos.length})</h2>\n      <ul className=\"repos\">\n        {repos.map((value, index) => {\n          return <li key={index}>\n            <span>{value.name}</span>\n            <input type=\"password\" value={value.token} onClick={this.toggleVisible} />\n            <Button color=\"secondary\" onClick={() => this.onDelete(value.name)}>Delete</Button>\n          </li>\n        })}\n      </ul>\n    </div>\n    )\n  }\n}\n  \nexport default Repos;\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass About extends Component {\n  // COVID-19\n  //<p>After working in software for over 15 years it becomes obvious that writing software isn't the key challenge, communication is.</p>\n  //  <p>trevor has been working in software for over 15 years across start ups, private contracting, and enterprise.</p>\n  //        <p>Good Communication remains the biggest predictor of project success.</p>\n  render() {\n    return (\n      <Typography align=\"left\" paragraph={true}>\n        <p><code>pointillism</code> is a passion product written by <a href=\"https://trevorgrayson.com\" target=\"trevor\">trevor grayson</a>.</p>\n        <p>This is built with hopes to be part of a larger effort of software projects adopting \"real-time\" documentation.\n        To enable teams to ship well documented, better code, faster.</p>\n      </Typography>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport Manifesto from './Manifesto';\nimport GettingStarted from './GettingStarted';\nimport Repos from './Repos';\nimport About from './About';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction loggedIn(username) {\n    return username != undefined && username.length > 0;\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function TabNav({host, domain, repos, username}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  var tabs = [\n    <Tab label=\"Mission\" {...a11yProps(0)} />,\n    <Tab label=\"Getting Started\" {...a11yProps(1)} />,\n    <Tab label=\"About\" {...a11yProps(2)} />\n  ]\n\n  var tabPanels = [\n      <TabPanel value={value} index={0}>\n        <Manifesto host={host} domain={domain}/>\n      </TabPanel>,\n      <TabPanel value={value} index={1}>\n        <GettingStarted host={host} domain={domain}/>\n      </TabPanel>,\n      <TabPanel value={value} index={2}>\n        <About/>\n      </TabPanel>,\n      <TabPanel value={value} index={3}>\n        <Repos repos={repos} />\n      </TabPanel>\n  ]\n\n  if (loggedIn(username)) {\n    tabs.push(<Tab label=\"Your Repositories\" {...a11yProps(3)} />)\n    tabs.push(<Tab label=\"logout\" href=\"/github/logout\" />)\n  } else {\n    tabs.push(<Tab label=\"login\" href=\"/github/login\"/>)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          {tabs}\n        </Tabs>\n      </AppBar>\n      {tabPanels}\n    </div>\n  );\n}","import React from 'react';\n\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <ul className=\"legal\">\n                <li><a href=\"/static/privacy.html\">Privacy Policy</a></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport TabNav from './Navigation'\nimport Footer from './layout/Footer'\n\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = props;\n  }\n  render() {\n    const host = this.state.host;\n    const domain = this.state.domain;\n    const paypalId = this.state.paypalId;\n    const username = this.state.username;\n    const repos = []\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <noticeable-widget access-token=\"qX3J6cHosUQbZuvYHcQO\" project-id=\"XAM1Z3O9kQY5jxf2vhPF\"></noticeable-widget>\n          <h2>pointillism.io</h2>\n        </div>\n        <TabNav host={host} domain={domain} repos={repos} username={username} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App host={document.HOST} domain={document.DOMAIN} paypalId={document.PAYPALID} username={document.username} />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}